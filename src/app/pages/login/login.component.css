mat-label {
    position: relative;
}

.material-icons-name {
    font-size: 18px;
}

.f-info {
    position: relative;
    background: #FFFFFF;
    box-shadow: inset -4px -4px 3px #FFFFFF, inset 4px 4px 7px rgba(0, 0, 0, 0.25);
    border-radius: 30px;
    width: 90%;
    height: 50px;
    /* for center input box */
    margin: auto;
    display: block;
}

.f-info {
    max-width: 550px;
}

.b-info {
    box-shadow: -5px -5px 10px #FFFFFF, 5px 5px 10px rgba(151, 149, 169, 0.5);
    border-radius: 35px;
    padding: 10px 40px;
}


/* Css Style classes for hovering from canvas mix-link hover styles */


/* Links */

.link {
    position: relative;
    cursor: pointer;
    white-space: nowrap;
    color: #93117D;
    font-size: 15px;
    font-family: 'Poppins';
}

.link::before,
.link::after {
    position: absolute;
    width: 100%;
    height: 1px;
    background: currentColor;
    top: 100%;
    left: 0;
    pointer-events: none;
}

.link::before {
    content: '';
    /* show by default */
}


/* Link 6 */

.link-6 {
    font-size: 15px;
}

.link-6::before {
    transform-origin: 50% 100%;
    transition: clip-path 0.3s, transform 0.3s cubic-bezier(0.2, 1, 0.8, 1);
    clip-path: polygon(0% 0%, 0% 100%, 0 100%, 0 0, 100% 0, 100% 100%, 0 100%, 0 100%, 100% 100%, 100% 0%);
}

.link-6:hover::before {
    transform: translate3d(0, 2px, 0) scale3d(1.08, 3, 1);
    clip-path: polygon(0% 0%, 0% 100%, 50% 100%, 50% 0, 50% 0, 50% 100%, 50% 100%, 0 100%, 100% 100%, 100% 0%);
}

.link-6 span {
    display: inline-block;
    transition: transform 0.3s cubic-bezier(0.2, 1, 0.8, 1);
}

.link-6:hover span {
    transform: translate3d(0, -2px, 0);
}


/* Link 3 */

.link-3::before {
    transform-origin: 100% 50%;
    transform: scale3d(0, 1, 1);
    transition: transform 0.3s cubic-bezier(0.2, 1, 0.8, 1);
}

.link-3:hover::before {
    transform-origin: 0% 50%;
    transform: scale3d(1, 2, 1);
    transition-timing-function: cubic-bezier(0.7, 0, 0.2, 1);
}

.link-3::after {
    content: '';
    top: calc(100% + 4px);
    transform-origin: 100% 50%;
    transform: scale3d(0, 1, 1);
    transition: transform 0.4s 0.1s cubic-bezier(0.2, 1, 0.8, 1);
}

.link-3:hover::after {
    transform-origin: 0% 50%;
    transform: scale3d(1, 1, 1);
    transition-timing-function: cubic-bezier(0.7, 0, 0.2, 1);
}


/* for tabs */

.nav-modi {
    background: #FFFFFF;
    box-shadow: inset -6px -6px 4px #FFFFFF, inset 6px 6px 10px rgba(0, 0, 0, 0.25);
    border-radius: 39.5px;
    padding: 2px 3px;
    width: auto;
}

.nav-tabs .nav-link.active {
    color: #FFFFFF;
    background: #93117D;
    box-shadow: -5px -5px 10px #FFFFFF, 5px 5px 10px rgba(151, 149, 169, 0.5);
    border-radius: 39.5px;
    padding: 9px 25px;
}

.nav-tabs .nav-link {
    margin-bottom: -1px;
    background: 0 0;
    border: 1px solid transparent;
}

.nav-link {
    display: block;
    padding: 0.5rem 1rem;
    color: #93117D;
    text-decoration: none;
    transition: color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out;
}


/* for all material input */


/* mat-icon-stepper selected color change  */


/* ::ng-deep .mat-step-header .mat-step-icon-selected,
.mat-step-header .mat-step-icon-state-done,
.mat-step-header .mat-step-icon-state-edit {
    background-color: red!important;
} */


/* input outline color */


/* ::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline {
    color: #93117d !important;
    opacity: 1!important;
} */


/* mat-input focused color */


/* ::ng-deep .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {
    color: #93117d !important;
} */


/* ::ng-deep .mat-form-field-underline,
 ::ng-deep .mat-form-field-ripple {
    background-color: white!important;
    opacity: 0;
} */


/* mat-input error outline color */


/* ::ng-deep .mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick {
    opacity: 0.8!important;
} */


/* mat-input carent color */


/* ::ng-deep .mat-input-element {
    caret-color: red!important;
    padding-left: 10px !important;
} */


/* mat-input error carent color */


/* ::ng-deep .mat-form-field-invalid .mat-input-element,
.mat-warn .mat-input-element {
    caret-color: red!important;
} */


/* mat-label normal state style */


/* ::ng-deep .mat-form-field-label {
    color: rgba(0, 0, 0, .6)!important;
    padding-left: 10px !important;
} */


/* mat-label focused style */


/* ::ng-deep .mat-form-field.mat-focused .mat-form-field-label {
    color: #93117d !important;
    padding-left: 30px !important;
}

::ng-deep .mat-form-field.mat-focused.mat-form-field-invalid .mat-form-field-label {
    color: red !important;
    padding-left: 30px !important;
} */


/* mat-label error style */


/* ::ng-deep .mat-form-field.mat-form-field-invalid .mat-form-field-label {
    color: red!important;
    padding-left: 30px !important;
} */


/* mat level border  */


/* 1st solution - causes weird thing at the left side of input */


/* ::ng-deep .mat-form-field-outline-start {
    border-radius: 30px 0 0 30px !important;
    min-width: 30px !important;
} */


/* ::ng-deep .mat-form-field-outline-end {
    border-radius: 0 30px 30px 0 !important;
} */


/* Radio Container  and checkbox*/


/* ::ng-deep .mat-radio-button.mat-accent .mat-radio-inner-circle {
    background-color: #93117d !important;
}

::ng-deep.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle {
    border-color: #93117d !important;
}

.radio-container input:checked~.checkmark {
    background-color: #e5e5e5;
} */